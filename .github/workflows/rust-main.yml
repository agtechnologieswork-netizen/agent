name: Rust Main Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'agent/**'
  pull_request:
    paths-ignore:
      - 'agent/**'

env:
  ECR_REGISTRY: 361769577597.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY: appdotbuild/agent-fullstack
  AWS_REGION: us-west-2

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            dabgent/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo check
        working-directory: ./dabgent
        run: cargo check

      - name: Run cargo clippy
        working-directory: ./dabgent
        run: cargo clippy -- -W warnings
        continue-on-error: true

  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            dabgent/target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

      - name: Run unit tests
        working-directory: ./dabgent
        run: cargo test --lib --all
        continue-on-error: true

      - name: Run integration tests (excluding e2e)
        working-directory: ./dabgent
        run: cargo test --all --test '*' -- --skip e2e_generation
        continue-on-error: true

  rust-e2e-tests:
    name: Rust E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            dabgent/target/
          key: ${{ runner.os }}-cargo-e2e-${{ hashFiles('**/Cargo.lock') }}

      - name: Run E2E tests
        working-directory: ./dabgent
        run: cargo test --test e2e_generation -- --nocapture
        continue-on-error: true

  rust-build:
    name: Build Rust Binaries
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [rust-checks, rust-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            dabgent/target/
          key: ${{ runner.os }}-cargo-build-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binaries
        working-directory: ./dabgent
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-binaries-${{ matrix.target }}
          path: dabgent/target/${{ matrix.target }}/release/
          retention-days: 7
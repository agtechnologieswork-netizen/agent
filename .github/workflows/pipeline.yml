name: CI Coordinator

on:
  push:
    branches:
      - main
  pull_request:

env:
  ECR_REGISTRY: 361769577597.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY: appdotbuild/agent-fullstack
  AWS_REGION: us-west-2

jobs:
  # Legacy Python deployment (temporary)
  build-and-push-python:
    name: Build and Push Python Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Determine if Release Build is Needed
        id: check_release
        run: |
          is_release="false"
          if git log -2 --pretty=%s | tail -n 1 | grep -q "release"; then
            is_release="true"
            echo "Release build detected based on commit message."
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            is_release="true"
            echo "Release build detected based on push to main branch."
          fi
          echo "is_release=${is_release}" >> $GITHUB_OUTPUT

      - name: Calculate Build Tag
        if: steps.check_release.outputs.is_release == 'true'
        id: build_tag
        run: |
          BRANCH_NAME_RAW="${{ github.head_ref || github.ref_name }}"
          BRANCH_NAME=$(echo "$BRANCH_NAME_RAW" | sed -e 's#^refs/heads/##' -e 's#^refs/tags/##' -e 's#/#-#g' -e 's/[^a-zA-Z0-9.-]/-/g')
          SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
          echo "commit_short_sha=$SHORT_SHA" >> "$GITHUB_OUTPUT"
          TAG=${BRANCH_NAME}-${SHORT_SHA}
          echo "Calculated Tag: $TAG"
          echo "image_tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "branch_name=$BRANCH_NAME" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        if: steps.check_release.outputs.is_release == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        if: steps.check_release.outputs.is_release == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ECR_REGISTRY }}

      - name: Build and push Docker image to ECR
        if: steps.check_release.outputs.is_release == 'true'
        working-directory: ./agent/
        env:
          IMAGE_TAG: ${{ steps.build_tag.outputs.image_tag }}
          BRANCH_NAME: ${{ steps.build_tag.outputs.branch_name }}
        run: |
          echo "Building and pushing Python Docker image with tag: $IMAGE_TAG ..."
          docker buildx build \
            --platform linux/arm64 \
            --target prod \
            --no-cache \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.BRANCH_NAME }}-latest \
            --push \
            .
          echo "Docker image built and pushed successfully!"

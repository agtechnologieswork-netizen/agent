name: Rust

on:
  push:
    branches:
      - main
  pull_request:

env:
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  rust-checks:
    name: Check and Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: dabgent

      - name: Run cargo check all targets
        working-directory: ./dabgent
        run: cargo check --all-targets --workspace

      - name: Run cargo clippy
        working-directory: ./dabgent
        run: cargo clippy --workspace -- -W warnings
        continue-on-error: true

  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: dabgent

      - name: Run unit tests
        working-directory: ./dabgent
        run: cargo nextest run --lib --bins --workspace

      - name: Run integration tests
        working-directory: ./dabgent
        # Run with single thread due to Dagger connection race conditions
        run: cargo nextest run --tests --workspace --test-threads=1

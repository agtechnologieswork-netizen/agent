{
  "name": "dataapps-minimal-template",
  "version": "1.0.0",
  "description": "Minimal DataApps template with FastAPI backend and React Admin frontend",
  "private": true,
  
  "scripts": {
    "_comment_dev": "Development scripts - run both backend and frontend in dev mode",
    "dev:backend": "cd backend && uv run uvicorn main:app --reload --host 0.0.0.0 --port 8000",
    "dev:frontend": "cd frontend && npm run dev",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    
    "_comment_production": "Production scripts - used by Databricks Apps",
    "start": "npm run start:backend",
    "start:backend": "cd backend && uv run python main.py",
    
    "_comment_setup": "Setup and dependency management",
    "setup": "npm run setup:backend && npm run setup:frontend",
    "setup:backend": "cd backend && uv sync",
    "setup:frontend": "cd frontend && npm install",
    "install": "npm run setup",
    
    "_comment_build": "Build frontend for production",
    "build:frontend": "cd frontend && npm run build",
    "build": "npm run build:frontend",
    
    "_comment_docker": "Docker deployment",
    "docker": "docker-compose up",
    
    "_comment_quality": "Code quality and testing",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && uv run ruff check .",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:fix": "npm run lint:backend:fix && npm run lint:frontend:fix",
    "lint:backend:fix": "cd backend && uv run ruff check . --fix", 
    "lint:frontend:fix": "cd frontend && npm run lint --fix",
    "typecheck": "npm run typecheck:backend && npm run typecheck:frontend",
    "typecheck:backend": "cd backend && uv run pyright .",
    "typecheck:frontend": "cd frontend && npm run type-check",
    "test": "cd backend && uv run pytest"
  },
  
  "devDependencies": {
    "concurrently": "^8.2.0"
  },
  
  "_usage": {
    "_comment": "How to use this template",
    
    "development": [
      "1. Run 'npm run setup' to install all dependencies",
      "2. Run 'npm run dev' to start both backend and frontend in dev mode", 
      "3. Backend at http://localhost:8000, frontend at http://localhost:3000",
      "4. Add your API resources in backend/main.py and frontend resources in src/App.tsx"
    ],
    
    "docker_deployment": [
      "1. Run 'npm run docker' to start (foreground)",
      "2. Visit http://localhost:8000", 
      "3. Press Ctrl+C to stop"
    ],
    
    "adding_resources": {
      "backend": "Add REST endpoints in backend/main.py following the TODO comments",
      "frontend": "Add React Admin <Resource> components in frontend/src/App.tsx"
    }
  }
}
# Databricks App Configuration for Minimal DataApps Template
# This file configures how your app runs in Databricks Apps environment
# Documentation: https://docs.databricks.com/en/dev-tools/databricks-apps/index.html

# App metadata
name: "dataapps-minimal-template"
version: "1.0.0"
description: "Minimal DataApps template with FastAPI backend and optional frontend"

# Runtime configuration
runtime:
  # Python version - must match your backend requirements
  python_version: "3.12"
  
  # TODO: Uncomment and configure if you need specific Databricks runtime features
  # databricks_runtime_version: "14.3.x-scala2.12"

# Environment variables for your application
env:
  # Port for FastAPI backend (standard for web apps)
  PORT: "8000"
  
  # CORS settings - restrict in production
  CORS_ORIGINS: "*"
  
  # TODO: Add your environment variables here
  # Examples:
  # DATABASE_URL: "your-database-connection-string"
  # API_KEY: "your-api-key"
  # LOG_LEVEL: "INFO"

# Command to start your application
# Databricks will run: uv sync, npm install, then this command
command: "npm run start"

# Resource allocation for your app
resources:
  # Memory allocation - adjust based on your data processing needs
  memory: "2Gi"  # Options: "1Gi", "2Gi", "4Gi", "8Gi"
  
  # CPU allocation - adjust based on computation requirements
  cpu: "1"       # Options: "0.5", "1", "2", "4"

# TODO: Configure additional Databricks features as needed

# Access control (optional)
# permissions:
#   can_edit: ["user@company.com"]
#   can_view: ["group-name"]

# Databricks workspace integration (optional)
# workspace:
#   # Mount workspace files or notebooks
#   include_source: true
#   
#   # Access to specific workspace paths
#   workspace_paths: ["/Shared/my-data"]

# Secrets integration (optional)
# secrets:
#   # Reference Databricks secrets in your app
#   - scope: "my-scope"
#     key: "database-password"
#     env_var: "DB_PASSWORD"

# Networking (optional)
# network:
#   # Custom domain configuration
#   custom_domain: "my-app.company.com"

# Examples for different app types:

# Data processing app example:
# resources:
#   memory: "8Gi"
#   cpu: "4"
# env:
#   SPARK_DRIVER_MEMORY: "4g"
#   SPARK_EXECUTOR_MEMORY: "2g"

# Dashboard app example:
# resources:
#   memory: "1Gi" 
#   cpu: "0.5"
# env:
#   CACHE_SIZE: "100"
#   REFRESH_INTERVAL: "300"

# ML inference app example:
# resources:
#   memory: "4Gi"
#   cpu: "2"
# env:
#   MODEL_PATH: "/dbfs/models/my-model"
#   BATCH_SIZE: "32"